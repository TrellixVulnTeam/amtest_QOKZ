{"ast":null,"code":"import { BUSCAR_PERS, BUSCAR_PERS_JSONFILE, BUSCAR_PERS_ERROR, BUSCAR_PERS_SUCCESS, SET_FAVORITE, REMOVE_FAVORITE, ADD_CHARACTER, ADD_CHARACTER_SUCCESS, ADD_CHARACTER_ERROR } from \"../types\"; //Buscar personajes\n\nexport function buscarPersonajes() {\n  return dispatch => {\n    dispatch(fetchAllCharacteres());\n\n    try {\n      fetch(\"http://hp-api.herokuapp.com/api/characters\").then(response => response.json()).then(data => {\n        data = data.map((obj, idx) => ({ ...obj,\n          id: idx,\n          favorite: false\n        }));\n        dispatch(fetchAllCharacteresSuccess(data));\n        return;\n      }).catch(e => dispatch(fetchAllCharacteresError(\"Error al obtener información de los personajes.\")));\n    } catch (error) {\n      dispatch(fetchAllCharacteresError(error));\n    } //Archivo JSON\n\n\n    fetch(\"http://localhost:4000/characteres\").then(response => response.json()).then(data => {\n      data = data.map(obj => ({ ...obj,\n        favorite: false\n      }));\n      dispatch(fetchCharacteresJsonServer(data));\n      return;\n    }).catch(e => console.log(\"Error al obtener información de archivo jsonserver/db.json\"));\n  };\n} //Favorito\n\nexport function changeFavorite(id, value) {\n  return dispatch => {\n    dispatch(updateFav(id, value));\n  };\n} //Quitar favorito\n\nexport function removeFavorite(id) {\n  return dispatch => {\n    dispatch(deleteFav(id));\n  };\n} //Nuevo personaje\n\nexport function addCharacter(data) {\n  return dispatch => {\n    console.log(data);\n    dispatch(addPers());\n\n    try {\n      fetch(\"http://localhost:4000/characteres\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => {\n        //data = data.map((obj, idx) => ({ ...obj, id: idx, favorite: false }));\n        console.log(data);\n        dispatch(addPersSuccess(data));\n        return;\n      }).catch(e => dispatch(addPersError(\"Error al obtener información de los personajes.\")));\n    } catch (error) {\n      dispatch(addPersError(error));\n    }\n  };\n}\n\nconst fetchAllCharacteres = () => ({\n  type: BUSCAR_PERS\n});\n\nconst fetchAllCharacteresSuccess = data => ({\n  type: BUSCAR_PERS_SUCCESS,\n  payload: data\n});\n\nconst fetchCharacteresJsonServer = data => ({\n  type: BUSCAR_PERS_JSONFILE,\n  payload: data\n});\n\nconst fetchAllCharacteresError = error => ({\n  type: BUSCAR_PERS_ERROR,\n  payload: error\n});\n\nconst updateFav = (id, value) => ({\n  type: SET_FAVORITE,\n  payload: {\n    id,\n    value\n  }\n});\n\nconst deleteFav = id => ({\n  type: REMOVE_FAVORITE,\n  payload: id\n});\n\nconst addPers = () => ({\n  type: ADD_CHARACTER\n});\n\nconst addPersSuccess = data => ({\n  type: ADD_CHARACTER_SUCCESS,\n  payload: data\n});\n\nconst addPersError = error => ({\n  type: ADD_CHARACTER_ERROR,\n  payload: error\n});","map":{"version":3,"sources":["/Users/gilberto/projects/am-test/src/actions/persActions.js"],"names":["BUSCAR_PERS","BUSCAR_PERS_JSONFILE","BUSCAR_PERS_ERROR","BUSCAR_PERS_SUCCESS","SET_FAVORITE","REMOVE_FAVORITE","ADD_CHARACTER","ADD_CHARACTER_SUCCESS","ADD_CHARACTER_ERROR","buscarPersonajes","dispatch","fetchAllCharacteres","fetch","then","response","json","data","map","obj","idx","id","favorite","fetchAllCharacteresSuccess","catch","e","fetchAllCharacteresError","error","fetchCharacteresJsonServer","console","log","changeFavorite","value","updateFav","removeFavorite","deleteFav","addCharacter","addPers","method","body","JSON","stringify","headers","addPersSuccess","addPersError","type","payload"],"mappings":"AAAA,SACCA,WADD,EAECC,oBAFD,EAGCC,iBAHD,EAICC,mBAJD,EAKCC,YALD,EAMCC,eAND,EAOCC,aAPD,EAQCC,qBARD,EASCC,mBATD,QAUO,UAVP,C,CAYA;;AACA,OAAO,SAASC,gBAAT,GAA4B;AAClC,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACC,mBAAmB,EAApB,CAAR;;AACA,QAAI;AACHC,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AACfA,QAAAA,IAAI,GAAGA,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,MAAe,EAAE,GAAGD,GAAL;AAAUE,UAAAA,EAAE,EAAED,GAAd;AAAmBE,UAAAA,QAAQ,EAAE;AAA7B,SAAf,CAAT,CAAP;AACAX,QAAAA,QAAQ,CAACY,0BAA0B,CAACN,IAAD,CAA3B,CAAR;AACA;AACA,OANF,EAOEO,KAPF,CAOSC,CAAD,IACNd,QAAQ,CACPe,wBAAwB,CACvB,iDADuB,CADjB,CARV;AAcA,KAfD,CAeE,OAAOC,KAAP,EAAc;AACfhB,MAAAA,QAAQ,CAACe,wBAAwB,CAACC,KAAD,CAAzB,CAAR;AACA,KAnBmB,CAqBpB;;;AACAd,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AACfA,MAAAA,IAAI,GAAGA,IAAI,CAACC,GAAL,CAAUC,GAAD,KAAU,EAAE,GAAGA,GAAL;AAAUG,QAAAA,QAAQ,EAAE;AAApB,OAAV,CAAT,CAAP;AACAX,MAAAA,QAAQ,CAACiB,0BAA0B,CAACX,IAAD,CAA3B,CAAR;AACA;AACA,KANF,EAOEO,KAPF,CAOSC,CAAD,IACNI,OAAO,CAACC,GAAR,CACC,4DADD,CARF;AAYA,GAlCD;AAmCA,C,CAED;;AACA,OAAO,SAASC,cAAT,CAAwBV,EAAxB,EAA4BW,KAA5B,EAAmC;AACzC,SAAQrB,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACsB,SAAS,CAACZ,EAAD,EAAKW,KAAL,CAAV,CAAR;AACA,GAFD;AAGA,C,CAED;;AACA,OAAO,SAASE,cAAT,CAAwBb,EAAxB,EAA4B;AAClC,SAAQV,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACwB,SAAS,CAACd,EAAD,CAAV,CAAR;AACA,GAFD;AAGA,C,CAED;;AACA,OAAO,SAASe,YAAT,CAAsBnB,IAAtB,EAA4B;AAClC,SAAQN,QAAD,IAAc;AACpBkB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAN,IAAAA,QAAQ,CAAC0B,OAAO,EAAR,CAAR;;AACA,QAAI;AACHxB,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AAC1CyB,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAexB,IAAf,CAFoC;AAG1CyB,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR;AAHiC,OAAtC,CAAL,CAOE5B,IAPF,CAOQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPrB,EAQEF,IARF,CAQQG,IAAD,IAAU;AACf;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAN,QAAAA,QAAQ,CAACgC,cAAc,CAAC1B,IAAD,CAAf,CAAR;AACA;AACA,OAbF,EAcEO,KAdF,CAcSC,CAAD,IACNd,QAAQ,CACPiC,YAAY,CAAC,iDAAD,CADL,CAfV;AAmBA,KApBD,CAoBE,OAAOjB,KAAP,EAAc;AACfhB,MAAAA,QAAQ,CAACiC,YAAY,CAACjB,KAAD,CAAb,CAAR;AACA;AACD,GA1BD;AA2BA;;AAED,MAAMf,mBAAmB,GAAG,OAAO;AAClCiC,EAAAA,IAAI,EAAE5C;AAD4B,CAAP,CAA5B;;AAIA,MAAMsB,0BAA0B,GAAIN,IAAD,KAAW;AAC7C4B,EAAAA,IAAI,EAAEzC,mBADuC;AAE7C0C,EAAAA,OAAO,EAAE7B;AAFoC,CAAX,CAAnC;;AAKA,MAAMW,0BAA0B,GAAIX,IAAD,KAAW;AAC7C4B,EAAAA,IAAI,EAAE3C,oBADuC;AAE7C4C,EAAAA,OAAO,EAAE7B;AAFoC,CAAX,CAAnC;;AAKA,MAAMS,wBAAwB,GAAIC,KAAD,KAAY;AAC5CkB,EAAAA,IAAI,EAAE1C,iBADsC;AAE5C2C,EAAAA,OAAO,EAAEnB;AAFmC,CAAZ,CAAjC;;AAIA,MAAMM,SAAS,GAAG,CAACZ,EAAD,EAAKW,KAAL,MAAgB;AACjCa,EAAAA,IAAI,EAAExC,YAD2B;AAEjCyC,EAAAA,OAAO,EAAE;AAAEzB,IAAAA,EAAF;AAAMW,IAAAA;AAAN;AAFwB,CAAhB,CAAlB;;AAIA,MAAMG,SAAS,GAAId,EAAD,KAAS;AAC1BwB,EAAAA,IAAI,EAAEvC,eADoB;AAE1BwC,EAAAA,OAAO,EAAEzB;AAFiB,CAAT,CAAlB;;AAIA,MAAMgB,OAAO,GAAG,OAAO;AACtBQ,EAAAA,IAAI,EAAEtC;AADgB,CAAP,CAAhB;;AAGA,MAAMoC,cAAc,GAAI1B,IAAD,KAAW;AACjC4B,EAAAA,IAAI,EAAErC,qBAD2B;AAEjCsC,EAAAA,OAAO,EAAE7B;AAFwB,CAAX,CAAvB;;AAIA,MAAM2B,YAAY,GAAIjB,KAAD,KAAY;AAChCkB,EAAAA,IAAI,EAAEpC,mBAD0B;AAEhCqC,EAAAA,OAAO,EAAEnB;AAFuB,CAAZ,CAArB","sourcesContent":["import {\n\tBUSCAR_PERS,\n\tBUSCAR_PERS_JSONFILE,\n\tBUSCAR_PERS_ERROR,\n\tBUSCAR_PERS_SUCCESS,\n\tSET_FAVORITE,\n\tREMOVE_FAVORITE,\n\tADD_CHARACTER,\n\tADD_CHARACTER_SUCCESS,\n\tADD_CHARACTER_ERROR,\n} from \"../types\";\n\n//Buscar personajes\nexport function buscarPersonajes() {\n\treturn (dispatch) => {\n\t\tdispatch(fetchAllCharacteres());\n\t\ttry {\n\t\t\tfetch(\"http://hp-api.herokuapp.com/api/characters\")\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tdata = data.map((obj, idx) => ({ ...obj, id: idx, favorite: false }));\n\t\t\t\t\tdispatch(fetchAllCharacteresSuccess(data));\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch((e) =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tfetchAllCharacteresError(\n\t\t\t\t\t\t\t\"Error al obtener información de los personajes.\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatch(fetchAllCharacteresError(error));\n\t\t}\n\n\t\t//Archivo JSON\n\t\tfetch(\"http://localhost:4000/characteres\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tdata = data.map((obj) => ({ ...obj, favorite: false }));\n\t\t\t\tdispatch(fetchCharacteresJsonServer(data));\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch((e) =>\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"Error al obtener información de archivo jsonserver/db.json\"\n\t\t\t\t)\n\t\t\t);\n\t};\n}\n\n//Favorito\nexport function changeFavorite(id, value) {\n\treturn (dispatch) => {\n\t\tdispatch(updateFav(id, value));\n\t};\n}\n\n//Quitar favorito\nexport function removeFavorite(id) {\n\treturn (dispatch) => {\n\t\tdispatch(deleteFav(id));\n\t};\n}\n\n//Nuevo personaje\nexport function addCharacter(data) {\n\treturn (dispatch) => {\n\t\tconsole.log(data);\n\t\tdispatch(addPers());\n\t\ttry {\n\t\t\tfetch(\"http://localhost:4000/characteres\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\t//data = data.map((obj, idx) => ({ ...obj, id: idx, favorite: false }));\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tdispatch(addPersSuccess(data));\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch((e) =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\taddPersError(\"Error al obtener información de los personajes.\")\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatch(addPersError(error));\n\t\t}\n\t};\n}\n\nconst fetchAllCharacteres = () => ({\n\ttype: BUSCAR_PERS,\n});\n\nconst fetchAllCharacteresSuccess = (data) => ({\n\ttype: BUSCAR_PERS_SUCCESS,\n\tpayload: data,\n});\n\nconst fetchCharacteresJsonServer = (data) => ({\n\ttype: BUSCAR_PERS_JSONFILE,\n\tpayload: data,\n});\n\nconst fetchAllCharacteresError = (error) => ({\n\ttype: BUSCAR_PERS_ERROR,\n\tpayload: error,\n});\nconst updateFav = (id, value) => ({\n\ttype: SET_FAVORITE,\n\tpayload: { id, value },\n});\nconst deleteFav = (id) => ({\n\ttype: REMOVE_FAVORITE,\n\tpayload: id,\n});\nconst addPers = () => ({\n\ttype: ADD_CHARACTER,\n});\nconst addPersSuccess = (data) => ({\n\ttype: ADD_CHARACTER_SUCCESS,\n\tpayload: data,\n});\nconst addPersError = (error) => ({\n\ttype: ADD_CHARACTER_ERROR,\n\tpayload: error,\n});\n"]},"metadata":{},"sourceType":"module"}